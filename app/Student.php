<?php

namespace App;

use App\QueryFilter\Name;
use App\QueryFilter\Sort;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Pipeline\Pipeline;
use Illuminate\Support\Str;

class Student extends Model
{
    protected $guarded = [];

    public static function allStudents($center)
    {
        return app(Pipeline::class)
            ->send($center->students())
            ->through([
                Sort::class,
                Name::class
            ])
            ->thenReturn()
            ->get();

    }

    public function profileImage()
    {
        $imagePath = ($this->image) ? $this->image : 'profiles/RwIFWl3VBxNdet3VFZR7eK0PPkQQA5kOo6Q32ZSD.png';
        return url('/uploads/profiles/' . $imagePath);
    }

    public function setImageAttribute($image){
        $original = Image::saveImage('/uploads/profiles', $image);
        return $this->attributes['image'] = url("/uploads/profiles/".$original);

    }
    public function setIdImageAttribute($idImage){
        $original = Image::saveImage('/uploads/profiles', $idImage);
        return $this->attributes['idImage'] = url("/uploads/profiles/".$original);

    }



    public function degreeOptions(){
        return [
          'طالب','خريج'
        ];
    }

    public function facultyOptions(){
        return [
            'هندسه','تجاره'
        ];
    }

    public function address()
    {
        return $this->morphOne(Address::class,'addressable');
    }

    public function centers()
    {
        return $this->belongsToMany(\App\Center::class)->withTimestamps();
    }

    public function testsEnrolling()
    {
        return $this->belongsToMany(TestGroup::class)->withPivot(['take','result'])->withTimestamps();
    }


    public function courses(){
        return $this->belongsToMany(CourseGroup::class);
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::deleting(function ($student){
            if($student->address) $student->address->delete();

        });
    }
}
