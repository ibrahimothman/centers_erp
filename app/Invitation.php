<?php

namespace App;

use App\Events\NewInvitationHasCreated;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Artisan;
use Illuminate\Support\Str;
use function GuzzleHttp\Psr7\str;

class Invitation extends Model
{
    protected $fillable = [
        'email', 'token', 'accepted', 'accepted_at'
    ];

    public function addNew($data)
    {
        $invitation = $this->create($data);
        if(isset($data['jobs'])){
            $invitation->jobs()->attach($data['jobs']);
            return $invitation->load('jobs');
        }

        return $invitation;

    }

    public function jobs()
    {
        return $this->belongsToMany(Job::class)->withTimestamps();
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        // generate a token and attach it to invitation
        static::creating(function ($invitation){
            $invitation->token = (new self)->generateToken();
        });

        // send invitation email
        static::created(function ($invitation){
            Artisan::call('queue:work &');
            event(new NewInvitationHasCreated($invitation));
        });
    }

    /**
     * Generate random token, check if unique, if not regenerate.
     *
     * @return string $token
     */
    private function generateToken()
    {
        $token = str::random(16);
        if(Invitation::where('token', $token)->first()){
            return $this->generateToken();
        }

        return $token;
    }
}
